; conf.ini

# Conf file used to evaluate the CNEv2 implementation

[GENERAL]
TASK = lp
LP_NUM_EDGE_SPLITS = 2
NC_NUM_NODE_SPLITS =
NC_NODE_FRACS =
NR_EDGE_SAMP_FRAC = 0.1
EDGE_EMBEDDING_METHODS = average hadamard weighted_l1
LP_MODEL = LogisticRegression
EMBED_DIM = 128
VERBOSE = False
SEED = None

[NETWORKS]
NAMES = Facebook StudentDB
INPATHS = ../data/Facebook/facebook_combined.txt
          ../data/StudentDB/studentdb.edgelist
DIRECTED = False
SEPARATORS = '\s' ','
COMMENTS = '#' '#'
LABELPATHS =

[PREPROCESSING]
RELABEL = True
DEL_SELFLOOPS = True
SAVE_PREP_NW = False
WRITE_STATS = True
DELIMITER = ','

[EDGESPLIT]
TRAINTEST_FRAC = 0.8
TRAINVALID_FRAC = 0.9
SPLIT_ALG = spanning_tree
OWA = False
FE_RATIO = 1

[BASELINES]
LP_BASELINES = common_neighbours
               jaccard_coefficient
#               adamic_adar_index
#               preferential_attachment
NEIGHBOURHOOD = in out

[OPENNE METHODS]
NAMES_OPNE = deepWalk_OPNE line_OPNE
METHODS_OPNE = python -m openne --method node2vec --number-walks 10 --walk-length 80 --window-size 10 --p 1.0 --q 1.0 --workers 8
               python -m openne --method deepWalk --number-walks 10 --walk-length 80 --window-size 10 --workers 8
TUNE_PARAMS_OPNE =

[OTHER METHODS]
NAMES_OTHER = CNEv2_d8_degree CNE_d8_degree Prune
#CNE_d8_uniform
EMBTYPE_OTHER = e2e e2e ne
WRITE_WEIGHTS_OTHER = False False False
WRITE_DIR_OTHER = True True True
# By default EvalNE autofills the dimension parameter. If a different values is needed, the same parameter can be passed
# to the method again. The later value is the one used by the method. This hack only works for e2e methods
METHODS_OTHER = python /home/alexandru/Desktop/CNE2/CNEv2/mainv2.py --inputgraph {} --tr_e {} --te_e {} --tr_pred {} --te_pred {} --dimension {} --epochs 10 --dimension 8 --prior 'degree' --optimizer adam --learning_rate 0.01 --s1 1
                python /home/alexandru/Desktop/CNE2/CNEv2/main.py --inputgraph {} --tr_e {} --te_e {} --tr_pred {} --te_pred {} --dimension {} --epochs 10 --dimension 8 --prior 'degree' --optimizer adam --learning_rate 0.01 --s1 1
                python ../methods/PRUNE/src/main.py --inputgraph {} --output {} --dimension {}
#                python ../methods/CNEv2/main.py --inputgraph {} --tr_e {} --te_e {} --tr_pred {} --te_pred {} --dimension {} --epochs 100 --dimension 8 --prior 'uniform' --optimizer adam
#                python ../methods/CNEv2/main.py --inputgraph {} --tr_e {} --te_e {} --tr_pred {} --te_pred {} --dimension {} --epochs 500 --dimension 8 --prior 'degree' --optimizer adam

TUNE_PARAMS_OTHER =
INPUT_DELIM_OTHER = ',' ',' '\s'
OUTPUT_DELIM_OTHER = ',' ',' ','

[REPORT]
MAXIMIZE = auroc
SCORES = all
CURVES =
PRECATK_VALS =